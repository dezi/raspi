#####################################################################
#
# Build ffmpeg from web.
#
# Dennis Zierahn
#

ffmpeg_version = git
ffmpeg = ffmpeg-$(ffmpeg_version)

all: ffmpeg

ffmpeg-local-doit: ./ffmpeg-local
	cd ./ffmpeg-local; make all

#####################################################################
#
# Local setup
#

./ffmpeg-local:
	mkdir ./ffmpeg-local
	ln -s ../Makefile.ffmpeg-local ./ffmpeg-local/Makefile

#####################################################################
#
# ffmpeg
#

$(ffmpeg): 
	git clone git://source.ffmpeg.org/ffmpeg $(ffmpeg)
	tar -cvzf ffmpeg-git.tar.gz $(ffmpeg)
	mv -f ffmpeg-git.tar.gz ../download

$(ffmpeg)/libavfilter/vf_logo.c:
	cd $(ffmpeg)/libavfilter; \
	cp ../../../filters/vf_logo.c .; \
	HAVE_VFLOGO=`fgrep -o "REGISTER_FILTER(LOGO" allfilters.c`; \
	if test "x$$HAVE_VFLOGO" = "x"; then \
		sed -i '/initialized = 1;/ a\\n\tREGISTER_FILTER(LOGO,\t\t\tlogo,\t\t\tvf);' allfilters.c; \
	fi; \
	HAVE_VFLOGO=`fgrep -o "CONFIG_LOGO_FILTER" Makefile`; \
	if test "x$$HAVE_VFLOGO" = "x"; then \
		sed -i '$$ a\\nOBJS-$$(CONFIG_LOGO_FILTER) += vf_logo.o' Makefile; \
	fi; \
	
ffmpeg-common = \
	--enable-gpl \
	--enable-version3 \
	--enable-nonfree \
	--enable-runtime-cpudetect \
	--enable-hardcoded-tables \
	--enable-zlib \
	--enable-bzlib \
	--enable-gnutls \
	--enable-librtmp \
	--enable-libfreetype \
	--enable-libfdk-aac \
	--enable-libopencore-amrnb \
	--enable-libopencore-amrwb \
	--enable-libvo-aacenc \
	--enable-libvo-amrwbenc \
	--enable-libmp3lame \
	--enable-libopenjpeg \
	--enable-libtheora \
	--enable-libvorbis \
	--enable-libspeex \
	--disable-libass \
	--enable-libopus \
	--enable-libgsm \
	--enable-libvpx \
	--enable-libxavs \
	--enable-libxvid \
	--enable-libx264 \
	--enable-libbluray \
	--enable-libschroedinger \
	--enable-libilbc \
	--enable-fontconfig \
	--enable-frei0r \
	--disable-filter=frei0r \

ffmpeg-alloptions = \
	--enable-gpl \
	--enable-nonfree \
	--enable-version3 \
	--enable-fontconfig \
	--enable-frei0r \
	--enable-gnutls \
	--enable-ladspa \
	--enable-libass \
	--enable-libbluray \
	--enable-libcaca \
	--enable-libcdio \
	--enable-libcelt \
	--enable-libdc1394 \
	--enable-libfaac \
	--enable-libfdk-aac \
	--enable-libflite \
	--enable-libfreetype \
	--enable-libgme \
	--enable-libgsm \
	--enable-libiec61883 \
	--enable-libilbc \
	--enable-libmodplug \
	--enable-libmp3lame \
	--enable-libnut \
	--enable-libopencore-amrnb \
	--enable-libopencore-amrwb \
	--enable-libopenjpeg \
	--enable-libpulse \
	--enable-librtmp \
	--enable-libschroedinger \
	--enable-libshine \
	--enable-libsoxr \
	--enable-libspeex \
	--enable-libtheora \
	--enable-libtwolame \
	--enable-libutvideo \
	--enable-libv4l2 \
	--enable-libvidstab \
	--enable-libvo-aacenc \
	--enable-libvo-amrwbenc \
	--enable-libvorbis \
	--enable-libvpx \
	--enable-libwavpack \
	--enable-libwebp \
	--enable-libx264 \
	--enable-libxavs \
	--enable-libxvid \
	--enable-libzvbi \
	--enable-openal \
	--enable-opencl \
	--enable-opengl \
	--enable-x11grab \

ffmpeg-allshared = \
	--enable-shared \
	--enable-static \
	--enable-libaacplus \
	--enable-libopus \
	--enable-libquvi \
	--enable-openssl \
	--enable-libssh \

ffmpeg-allstatic = \
	--enable-static \
	--disable-shared \
	--extra-ldflags="-v" \

ffmpeg-alloptionsfail = \
	--enable-avisynth \
	--enable-libopencv \
	--enable-libstagefright-h264 \
	--enable-libx265 \
	--enable-decklink \
	
ffmpeg-shared = \
	--enable-shared \
	--disable-static \
	
ffmpeg-static = \
	--enable-shared \
	--disable-static \
	--extra-ldflags="-L../../static" \

ffmpeg-libs = \
	--extra-libs="-lm" \
	--extra-libs="-lz" \
	--extra-libs="-ldl" \
	--extra-libs="-lbz2" \
	--extra-libs="-lexpat" \
	--extra-libs="-lfreetype" \
	--extra-libs="-lfontconfig" \
	--extra-libs="-lfribidi" \
	--extra-libs="-lorc-0.4" \
	--extra-libs="-lgmp" \
	--extra-libs="-lhogweed" \
	--extra-libs="-lnettle" \
	--extra-libs="-lgnutls" \
	--extra-libs="-ljpeg" \
	--extra-libs="-lcdio" \
	--extra-libs="-lcdio_cdda" \
	--extra-libs="-lcdio_paranoia" \

ffmpeg-darwin:
	--extra-libs="-liconv" \
	
ffmpeg-moreoptions-dont-work-yet:
	--enable-libcdio \
	--enable-libutvideo \

ffmpeg-env-xodroid= \
	export TARGET_SUBARCH="armv7"; \
	export TARGET_CPU="cortex-a9"; \
	export TARGET_FLOAT="hard"; \
	export TARGET_FPU="neon"; \
	export TARGET_FPU_FLAGS="-mfloat-abi=$$TARGET_FLOAT -mfpu=$$TARGET_FPU"; \
	export TARGET_EXTRA_FLAGS="-Wno-psabi -Wa,-mno-warn-deprecated"; \
	export TARGET_COPT="-Wall -pipe -fomit-frame-pointer -O3"; \
	export TARGET_COPT="$$TARGET_COPT -fexcess-precision=fast -ffast-math -funsafe-math-optimizations"; \
	export TARGET_LOPT="-s -Wl,--as-needed"; \
	export CFLAGS="-mcpu=$$TARGET_CPU $$TARGET_FPU_FLAGS -mabi=aapcs-linux"; \
	export CFLAGS="$$CFLAGS $$TARGET_COPT $$TARGET_EXTRA_FLAGS"; \
	export CXXFLAGS="$$CFLAGS"; \
	export CFLAGS="$$CFLAGS -fgnu89-inline"; \
	export CPPFLAGS="$$CFLAGS"; \
	export LDFLAGS="-L/opt/vc/lib -march=$$TARGET_SUBARCH -mtune=$$TARGET_CPU $$TARGET_LOPT"

nixi:
	mkdir -p ../static;
	ln -sf /usr/local/lib/lib*.a ../static
	ln -sf /usr/local/lib64/lib*.a ../static
	ln -sf /usr/local/lib77/lib*.a ../static
	ln -sf /usr/lib/arm-linux-gnueabihf/lib*.a ../static
	ln -sf /lib/arm-linux-gnueabihf/lib*.a ../static
	
$(ffmpeg)/dezi.static.conf:
	cd $(ffmpeg); \
	rm -f ffmpeg ffplay ffprobe ffserver; \
	rm -f ffmpeg_g ffplay_g ffprobe_g ffserver_g; \
	export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabihf/pkgconfig:$$PKG_CONFIG_PATH"; \
	make clean; \
	./configure $(ffmpeg-common) $(ffmpeg-static) $(ffmpeg-libs) || exit; \
	touch dezi.static.conf

$(ffmpeg)/dezi.static.done: $(ffmpeg)/dezi.static.conf
	cd $(ffmpeg); \
	make || exit; \
	sudo make install; \
	sudo mv -f /usr/local/bin/ffmpeg   /usr/local/bin/ffmpeg-static; \
	sudo mv -f /usr/local/bin/ffplay   /usr/local/bin/ffplay-static; \
	sudo mv -f /usr/local/bin/ffprobe  /usr/local/bin/ffprobe-static; \
	sudo mv -f /usr/local/bin/ffserver /usr/local/bin/ffserver-static; \
	touch dezi.static.done
	
$(ffmpeg)/dezi.shared.conf:
	cd $(ffmpeg); \
	rm -f ffmpeg ffplay ffprobe ffserver; \
	rm -f ffmpeg_g ffplay_g ffprobe_g ffserver_g; \
	export PKG_CONFIG_PATH="/usr/local/lib64/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/lib/pkgconfig:$$PKG_CONFIG_PATH"; \
	export PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabihf/pkgconfig:$$PKG_CONFIG_PATH"; \
	make clean; \
	./configure $(ffmpeg-common) $(ffmpeg-shared) $(ffmpeg-libs) || exit; \
	touch dezi.shared.conf
	
$(ffmpeg)/dezi.shared.done: $(ffmpeg)/dezi.shared.conf
	cd $(ffmpeg); \
	make || exit; \
	sudo make install; \
	sudo mv -f /usr/local/bin/ffmpeg   /usr/local/bin/ffmpeg-shared; \
	sudo mv -f /usr/local/bin/ffplay   /usr/local/bin/ffplay-shared; \
	sudo mv -f /usr/local/bin/ffprobe  /usr/local/bin/ffprobe-shared; \
	sudo mv -f /usr/local/bin/ffserver /usr/local/bin/ffserver-shared; \
	touch dezi.shared.done
	
$(ffmpeg)/dezi.test.conf:
	cd $(ffmpeg); \
	rm -f ffmpeg ffplay ffprobe ffserver; \
	rm -f ffmpeg_g ffplay_g ffprobe_g ffserver_g; \
	./configure $(ffmpeg-alloptions) $(ffmpeg-allstatic) || exit; \
	touch dezi.test.conf
	
ffmpeg-test: \
	$(ffmpeg) \
	$(ffmpeg)/libavfilter/vf_logo.c \
	$(ffmpeg)/dezi.test.conf \
	
ffmpeg: \
	$(ffmpeg) \
	$(ffmpeg)/libavfilter/vf_logo.c \
	$(ffmpeg)/dezi.shared.done \
	$(ffmpeg)/dezi.static.done \

